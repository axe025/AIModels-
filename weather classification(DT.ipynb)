https://colab.research.google.com/drive/1aQj7QHWbSJ5VPhNf_dOehzfU4Kr66ZVq?usp=sharing
import pandas as pd
df = pd.read_csv("https://raw.githubusercontent.com/dataprofessor/data/master/weather-nominal-weka.csv")
df.head()
#X=df.drop(columns="Species")
Y=df["play"]
Y
X = df.drop(["play"], axis=1)
X
from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
for column in df.columns[:-1]:  # Exclude the target column 'play'
    df[column] = label_encoder.fit_transform(df[column])

# Separate the features (X) and target variable (Y)
X = df.drop('play', axis=1)
Y = label_encoder.fit_transform(df['play'])
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test= train_test_split(X,Y, train_size=0.8 , random_state=100)

x_train
x_test
from sklearn import tree
model=tree.DecisionTreeClassifier()
model.fit(x_train, y_train)
y_train_pred=model.predict(x_train)
y_test_pred=model.predict(x_test)

from sklearn.metrics import mean_squared_error,r2_score
lr_train_MSE=mean_squared_error(y_train,y_train_pred)
lr_train_r2=r2_score(y_train,y_train_pred)

lr_test_MSE=mean_squared_error(y_test,y_test_pred)
lr_test_r2=r2_score(y_test,y_test_pred)

print('LR MSE(Train):',lr_train_MSE)
print('LR r2(Train):',lr_train_r2)
print('LR MSE(Test):',lr_test_MSE)
print('LR r2(Test):',lr_test_r2)
import pickle
# save the model to disk
filename = 'Weather_dataset.sav'
pickle.dump(model, open(filename, 'wb'))
#calling saved model
loaded_model = pickle.load(open(filename, 'rb'))
result = loaded_model.score(x_test, y_test)
print(result)
